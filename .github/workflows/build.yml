name: Build

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  build:
    name: Build Plugin
    runs-on: self-hosted
    container:
      image: ghcr.io/hopplin/build-env:latest
      options: --user root
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
      pluginVerifierHomeDir: ${{ steps.properties.outputs.pluginVerifierHomeDir }}
    steps:
      - name: Docker Login
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Export Build Properties
        id: properties
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "pluginVerifierHomeDir=/github/home/.pluginVerifier" >> $GITHUB_OUTPUT
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build Plugin
        run: ./gradlew buildPlugin

      - name: Prepare Plugin Artifact
        id: artifact
        run: |
          cd build/distributions
          FILENAME=`ls *.zip`
          unzip "$FILENAME" -d content
          echo "filename=${FILENAME:0:-4}" >> $GITHUB_OUTPUT

      - name: Upload Plugin Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact.outputs.filename }}
          path: ./build/distributions/content/*/*

  test:
    name: Run Tests
    needs: build
    runs-on: self-hosted
    container:
      image: ghcr.io/hopplin/build-env:latest
      options: --user root
    steps:
      - name: Docker Login
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Tests
        run: ./gradlew check

      - name: Upload Test Reports (on failure)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: tests-result
          path: build/reports/tests

      - name: Upload Code Coverage
        uses: codecov/codecov-action@v5
        with:
          files: build/reports/kover/report.xml

  inspectCode:
    name: Inspect Code (Qodana)
    needs: build
    runs-on: self-hosted
    container:
      image: ghcr.io/hopplin/build-env:latest
      options: --user root
    permissions:
      contents: write
      checks: write
      pull-requests: write
    steps:
      - name: Docker Login
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Checkout PR Head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Run Qodana Inspection
        uses: JetBrains/qodana-action@v2024.3
        with:
          cache-default-branch-only: true

      - name: Deploy Qodana Report
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ runner.temp }}/qodana/results/report

  verify:
    name: Verify Plugin
    needs: build
    runs-on: self-hosted
    container:
      image: ghcr.io/hopplin/build-env:latest
      options: --user root
    steps:
      - name: Docker Login
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Plugin Verifier IDEs Cache
        uses: actions/cache@v4
        with:
          path: ${{ needs.build.outputs.pluginVerifierHomeDir }}/ides
          key: plugin-verifier-${{ hashFiles('build/listProductsReleases.txt') }}

      - name: Run Plugin Verifier
        run: ./gradlew verifyPlugin -Dplugin.verifier.home.dir=${{ needs.build.outputs.pluginVerifierHomeDir }}

      - name: Upload Verifier Report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: pluginVerifier-result
          path: build/reports/pluginVerifier

  releaseDraft:
    name: Create Release Draft
    if: github.event_name != 'pull_request'
    needs: [build, test, inspectCode, verify]
    runs-on: self-hosted
    container:
      image: ghcr.io/hopplin/build-env:latest
      options: --user root
    permissions:
      contents: write
    steps:
      - name: Docker Login
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Delete Old Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api repos/${{ github.repository }}/releases \
            --jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' gh api -X DELETE repos/${{ github.repository }}/releases/{}

      - name: Create Release Draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ needs.build.outputs.version }}" \
            --draft \
            --title "v${{ needs.build.outputs.version }}" \
            --notes "${{ needs.build.outputs.changelog }}"